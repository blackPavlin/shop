openapi: 3.0.0
info:
  title: Shop
  description: The shop API.
  contact:
    name: Boykiv Bogdan
    email: boikiv.bogdan@gmail.com
  version: 1.0.0
servers:
  - url: 'http://localhost:3000/api'
tags:
  - name: Auth
    description: Авторизация
  - name: User
    description: Пользователь
  - name: Address
    description: Адреса доставки
  - name: Cart
    description: Корзина покупок
  - name: Order
    description: Заказ
  - name: Category
    description: Категория товара
  - name: Product
    description: Товар
  - name: Image
    description: Изображения
paths:
  /auth/login:
    post:
      summary: Авторизация пользователя
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  /auth/signup:
    post:
      summary: Регистрация пользователя
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  /user:
    get:
      summary: Получить информацию о пользователе
      tags:
        - User
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - BearerAuth: []

  /address:
    get:
      summary: Получить список адресов доставки
      tags:
        - Address
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressList'
      security:
        - BearerAuth: []
    post:
      summary: Добавить адрес доставки
      tags:
        - Address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
      security:
        - BearerAuth: []

  /cart:
    get:
      summary: Получить корзину пользователя
      tags:
        - Cart
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
      security:
        - BearerAuth: []
    post:
      summary: Добавить товар в корзину
      tags:
        - Cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartProduct'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
      security:
        - BearerAuth: []
    patch:
      summary: Изменить количество товара в корзине
      tags:
        - Cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartProduct'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
      security:
        - BearerAuth: []
    delete:
      summary: Очистить корзину
      tags:
        - Cart
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
      security:
        - BearerAuth: []

  /order:
    get:
      summary: Получить список заказов пользователя
      tags:
        - Order
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
      security:
        - BearerAuth: []
    post:
      summary: Создать заказ
      tags:
        - Order
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailed'
      security:
        - BearerAuth: []

  /order/{orderId}:
    get:
      summary: Получить детальную информацию о заказе
      tags:
        - Order
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailed'
      security:
        - BearerAuth: []
    parameters:
      - schema:
          type: integer
          format: int64
        name: orderId
        in: path
        required: true
        description: ID заказа

  /category:
    get:
      summary: Получить список категорий товаров
      tags:
        - Category
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryList'
    post:
      summary: Создать категорию
      tags:
        - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      security:
        - BearerAuth: []
    patch:
      summary: Изменить категорию
      tags:
        - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      security:
        - BearerAuth: []

  /category/{categoryId}:
    delete:
      summary: Удалить категорию
      tags:
        - Category
      responses:
        '200':
          description: successful operation
      security:
        - BearerAuth: []
    parameters:
      - schema:
          type: integer
          format: int64
        name: categoryId
        in: path
        required: true
        description: ID заказа

  /product:
    get:
      summary: Получить список товаров
      tags:
        - Product
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
    post:
      summary: Создать товар
      tags:
        - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      security:
        - BearerAuth: []

  /product/{productId}:
    get:
      summary: Получить детальную карточку товара
      tags:
        - Product
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    patch:
      summary: Изменить товар
      tags:
        - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      security:
        - BearerAuth: []
    parameters:
      - schema:
          type: string
        name: productId
        in: path
        required: true
        description: ID заказа

  /image/upload:
    post:
      summary: Загрузка изображений
      tags:
        - Image
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadImagesRequest'
            encoding:
              images:
                contentType: image/png, image/jpeg
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageList'
      security:
        - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    User:
      title: Пользователь
      type: object
      required:
        - id
        - name
        - email
        - phone
        - role
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        role:
          type: string
          enum:
            - USER
            - ADMIN

    Address:
      title: Адрес доставки
      type: object
      required:
        - id
        - userId
        - country
        - city
        - street
        - house
        - postcode
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        country:
          type: string
        city:
          type: string
        street:
          type: string
        house:
          type: integer
        letter:
          type: string
        flat:
          type: integer
        postcode:
          type: integer

    AddressList:
      title: Список адресов доставки
      type: array
      items:
        $ref: '#/components/schemas/Address'

    Cart:
      title: Корзина покупок
      type: object
      required:
        - id
        - userId
        - products
      properties:
        id:
          type: string
        userId:
          type: string
        products:
          $ref: '#/components/schemas/CartProductList'

    CartProduct:
      title: Товар в корзине пользователя
      required:
        - productId
        - amount
      properties:
        productId:
          type: string
        amount:
          type: integer

    CartProductList:
      title: Список товаров в корзине пользователя
      type: array
      items:
        $ref: '#/components/schemas/CartProduct'

    Order:
      title: Заказ
      type: object
      required:
        - id
        - userId
        - status
      properties:
        id:
          type: string
        userId:
          type: string
        status:
          type: string
          enum: [CREATED, ACCEPTED, CANCELED]

    OrderList:
      title: Список заказов пользователя
      type: array
      items:
        $ref: '#/components/schemas/Order'

    OrderDetailed:
      title: Детальная карточка заказа
      type: object
      required:
        - id
        - userId
        - products
      properties:
        id:
          type: string
        userId:
          type: string
        products:
          $ref: '#/components/schemas/OrderProductList'

    OrderProductList:
      title: Список товаров в заказе
      type: array
      items:
        $ref: '#/components/schemas/OrderProduct'
 
    OrderProduct:
      title: Товар в заказе
      type: object
      required:
        - productId
        - amount
      properties:
        productId:
          type: string
        amount:
          type: integer

    Category:
      title: Категория товара
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    CategoryList:
      title: Список категорий товаров
      type: array
      items:
        $ref: '#/components/schemas/Category'

    Product:
      title: Товар
      type: object
      required:
        - id
        - categoryId
        - name
        - amount
        - price
      properties:
        id:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        amount:
          type: integer
          format: int64
        price:
          type: integer
          format: int64

    ProductList:
      title: Список товаров
      type: array
      items:
        $ref: '#/components/schemas/Product'

    LoginRequest:
      title: Тело запроса для авторизации пользователя
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    LoginResponse:
      title: Токен авторизации
      type: object
      required:
        - token
      properties:
        token:
          type: string

    SignupRequest:
      title: Тело запроса для регистрации пользователя
      type: object
      required:
        - name
        - email
        - phone
        - password
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string

    CreateAddressRequest:
      title: Тело запроса для создания адреса доставки
      type: object
      required:
        - country
        - city
        - street
        - house
        - postcode
      properties:
        country:
          type: string
        city:
          type: string
        street:
          type: string
        house:
          type: integer
        letter:
          type: string
        flat:
          type: integer
        postcode:
          type: integer

    CreateCategoryRequest:
      title: Тело запроса для создания категории
      type: object
      required:
        - name
      properties:
        name:
          type: string

    CreateProductRequest:
      title: Запрос для создания товара
      type: object
      required:
        - categoryId
        - name
        - description
        - amount
        - price
      properties:
        categoryId:
          type: integer
        name:
          type: string
        description:
          type: string
        amount:
          type: integer
          format: int64
        price:
          type: integer
          format: int64

    UpdateProductRequest:
      title:  Запрос для изменения полей товара
      type: object

    Image:
      title: B
      type: object

    ImageList:
      title: B
      type: array
      items:
        $ref: '#/components/schemas/Image'

    UploadImagesRequest:
      title: Запрос на загрузку изображений
      type: object
      required:
        - files
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
