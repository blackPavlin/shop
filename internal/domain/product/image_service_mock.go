// Code generated by MockGen. DO NOT EDIT.
// Source: image_service.go

// Package product is a generated GoMock package.
package product

import (
	context "context"
	reflect "reflect"

	image "github.com/blackPavlin/shop/internal/domain/image"
	gomock "github.com/golang/mock/gomock"
)

// MockImageService is a mock of ImageService interface.
type MockImageService struct {
	ctrl     *gomock.Controller
	recorder *MockImageServiceMockRecorder
}

// MockImageServiceMockRecorder is the mock recorder for MockImageService.
type MockImageServiceMockRecorder struct {
	mock *MockImageService
}

// NewMockImageService creates a new mock instance.
func NewMockImageService(ctrl *gomock.Controller) *MockImageService {
	mock := &MockImageService{ctrl: ctrl}
	mock.recorder = &MockImageServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageService) EXPECT() *MockImageServiceMockRecorder {
	return m.recorder
}

// BulkCreate mocks base method.
func (m *MockImageService) BulkCreate(ctx context.Context, productID ID, props []*image.StorageProps) (Images, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreate", ctx, productID, props)
	ret0, _ := ret[0].(Images)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BulkCreate indicates an expected call of BulkCreate.
func (mr *MockImageServiceMockRecorder) BulkCreate(ctx, productID, props interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreate", reflect.TypeOf((*MockImageService)(nil).BulkCreate), ctx, productID, props)
}
