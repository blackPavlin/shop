version: '3.9'

services:
  shop:
    build:
      context: ../
      dockerfile: build/Dockerfile
    container_name: shop
    env_file:
      - ../configs/local.config.env
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shop.rule=(Host(`localhost`) && PathPrefix(`/api`))"
      - "traefik.http.routers.shop.entrypoints=web"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
  postgres:
    image: postgres:15.2-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shop
    volumes:
      - ./pg_data/:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d shop" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_REGION: us-east-1
    volumes:
      - ./s3_data/:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    command: server /data -console-address ":9001"
    labels:
      - "traefik.enable=true"
#      - "traefik.http.services.minio-backend.loadbalancer.server.scheme=http"
#      - "traefik.http.services.minio-backend.loadbalancer.server.port=9000"
#      - "traefik.http.services.minio-admin-backend.loadbalancer.server.scheme=http"
#      - "traefik.http.services.minio-admin-backend.loadbalancer.server.port=9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  redis:
    image: redis:7.0.11-alpine
    container_name: redis
    environment:
      REDIS_PASSWORD: redisadmin
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  redoc:
    image: redocly/redoc:v2.0.0
    container_name: redoc
    volumes:
      - ../api/openapi.v1.yaml:/usr/share/nginx/html/openapi.v1.yaml
    environment:
        SPEC_URL: openapi.v1.yaml
    ports:
      - "9090:80"
  traefik:
    image: traefik:v2.10
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    restart: unless-stopped
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
networks:
  default:
    driver: bridge